// First I will show the code needed to check if a move jeopardises the king

self.posx=
self.posy=
movedtox=
movedtoy=
self.boardtemp= [['brook1', 'bknight1', 'bbishop1', 'bqueen', 'bking', 'bbishop2', 'bknight2', 'brook2'],
            ['bpawn1', 'bpawn2', 'bpawn3', 'bpawn4', 'bpawn5', 'bpawn6', 'bpawn7', 'bpawn8'],
            ['', '', '', '', '', '', '', ''],['', '', '', '', '', '', '', ''],
            ['', '', '', '', '', '', '', ''],['', '', '', '', '', '', '', ''],
            ['wpawn1', 'wpawn2', 'wpawn3', 'wpawn4', 'wpawn5', 'wpawn6', 'wpawn7', 'wpawn8'],
            ['wrook1', 'wknight1', 'wbishop1', 'wking', 'wqueen', 'wbishop2', 'wknight2', 'wrook2']]
set record=self.board[self.posy][self.posx]
set self.board[self.posy][self.posx]=''
set self.board[movedtoy][movedtoy]=record
if (minicheck(self.boardtemp,colour) =False) do
    availableSquares.append(square)
    availableSquarex.append(self.posx)
end
  
ememysquarealg
empty squarealg

    
}

function diagonalsclear(board,colour) do
    for y in range(-1,2)do
        if (y=0) do
            pass
        end else do
            for x in range(-1,2) do
                if (x=0) do
                    pass
                end else do
                    if emptysquarealg(movedtoy+y][movedtox+x])=Truedo 
                        if 
                    end
                end
                
           end
        end

    end
end




function minicheck(board,colour) {
    //diagonal
    set diagonal=diagonalsclear(board,colour)


    if (diagonal=True) do 
        return True
    end
    //adjacent
    set adjacent=adjacentclear(board,colour)
    if (adjacent=True) do
        return True
    end

   
    //knight
    set knight=knightclear(board,colour)
    if (knight=True) do
        return True
    end    
    


       
}

//then the check algorithm

//then the checkmate algorithm

// for en passant check if current piece is pawn, if last moved piece was pawn and that pawn is adjacent now.
//On the other code I should've had the the endangers king called based on turn as a method of king only an used self.


//add a way to store piece just clicked on so if clicked again it's no worries
//some methods could've been subroutines